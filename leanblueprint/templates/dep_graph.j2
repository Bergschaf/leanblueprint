{% macro icon(icon, id='', class='') %}
<svg  {% if id %}id="{{id}}" {% endif %}class="icon icon-{{ icon }} {{ class }}"><use xlink:href="symbol-defs.svg#icon-{{ icon }}"></use></svg>
{% endmacro %}
<!DOCTYPE html>
<html>
<head>
  <title>{{ context.terms.get('Dependency graph', 'Dependency graph') }}</title>
  <meta name="generator" content="plasTeX" />
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="styles/theme-{{ config['html5']['theme-css'] }}.css" />
  <link rel="stylesheet" href="styles/dep_graph.css" />
  {% if config.html5['use-mathjax'] %}
  <script type="text/x-mathjax-config">
  {% if config.html5['mathjax-dollars'] %}
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
  {% else %}
    MathJax.Hub.Config({tex2jax: {inlineMath: [ ['\\(','\\)']]}});
  {% endif %}
  </script>
  <script type="text/javascript" src="{{ config.html5['mathjax-url'] }}">
  </script>
{% endif %}

</head>

<body>
<div class="wrapper">
<header>
  <h1 id="doc_title">{{ title }}</h1>
</header>
<div class="content">
    <div id="graph"></div>

<div id="statements">
<button class="closebtn">{{ icon('cross') }}</button>
{%- for thm in graph.nodes %}
  <div class="thm" id="{{ thm.id }}" style="display: none">
    <div class="thm_thmheading">
      <span class="{{ thm.thmName }}_thmcaption">
      {{ thm.caption }}
      </span>
      {% if thm.ref -%}
      <span class="{{thm.thmName}}_thmlabel">{{thm.ref}}</span>
      {%- endif -%}
      {% if thm.title -%}
      <span class="{{thm.thmName}}_thmtitle">{{ thm.title }}</span>
      {%- endif -%}
    </div>
    <div class="thm_thmcontent">{{ thm }}</div>
  </div>
{%- endfor -%}
</div>
</div> <!-- content -->
</div> <!-- wrapper -->
<script src="{{ jquery_url }}" type="text/javascript"></script>
<!--<script src="https://d3js.org/d3.v5.min.js"></script>
<script
       src="https://unpkg.com/@hpcc-js/wasm@0.3.11/dist/index.min.js"></script>
<script
    src="https://unpkg.com/d3-graphviz@3.0.5/build/d3-graphviz.js"></script>-->
<script src="js/jquery.svg.min.js"></script>

<script src="js/d3.min.js"></script>
<script src="js/hpcc.min.js"></script>
<script src="js/d3-graphviz.js"></script>

<script type="text/javascript">
const graphContainer = d3.select("#graph");
const width = graphContainer.node().clientWidth;
const height = graphContainer.node().clientHeight;

graphContainer.graphviz({useWorker: true})
    .width(width)
    .height(height)
    .fit(true)
    .renderDot('{{ dot.replace('\n','') }}')
    .on("end", interactive);

clickNode = function() {
  $("#statements div").hide()
  var node_id = $('text', this).text();
    console.log(node_id);
  console.log('#'+node_id.replace(':', '\\:'));
  $('.thm').hide();
  $('#'+node_id.replace(':', '\\:')).show().children().show();
}
function interactive() {

    d3.selectAll('.node')
        .attr('pointer-events', 'fill')
        .on('click', function () {
           var title = d3.select(this).selectAll('title').text().trim();
           $('#statements div').hide()
           $('.thm').hide();
           $('#'+title.replace(':', '\\:')).show().children().show();
           $('#statements').show()
        });

    d3.select('.closebtn').on('click', function() {
        console.log('click');
        $('#statements').hide();
    });
}

</script>

<!--<script src="js/dep_graph.js" type="text/javascript"></script>-->

</body>
</html>

